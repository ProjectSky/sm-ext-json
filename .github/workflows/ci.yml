name: build

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    name: build with sm${{ matrix.sm_version }} on ${{ matrix.os_short }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        sm_version:
          - "1.10"
          - "latest"
          
        include:
          - sm_version: latest
            sm_branch: master
            
          - sm_version: "1.10"
            sm_branch: "1.10-dev"
            
          - os: ubuntu-latest
            os_short: linux
            
    steps:
      - name: Prepare env
        shell: bash
        run: |
          echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
          
      - name: Install (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y clang g++-multilib
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
          
      - name: Getting SourceMod ${{ matrix.sm_version }}
        uses: actions/checkout@v3
        with:
          repository: alliedmodders/sourcemod
          ref: ${{ matrix.sm_branch }}
          path: sourcemod-${{ matrix.sm_version }}
          submodules: recursive
          
      - name: Getting AMBuild
        uses: actions/checkout@v3
        with:
          repository: alliedmodders/ambuild
          path: ambuild
          
      - name: Setting up Python
        uses: actions/setup-python@v2
        
      - name: Getting ambuild
        run: |
          python -m pip install wheel
          pip install git+https://github.com/alliedmodders/ambuild
          
      - name: Getting own repository
        uses: actions/checkout@v3
        with:
          path: extension
          
      - name: Compiling ${{ github.event.repository.name }} files
        shell: bash
        working-directory: extension
        run: |
          mkdir build
          cd build
          python \
            ../configure.py --enable-optimize --symbol-files \
            --sm-path="${{ github.workspace }}/sourcemod-${{ matrix.sm_version }}"
          ambuild
          
      - name: Uploading package
        uses: actions/upload-artifact@v3
        with:
          name: sm-ext-json-sm${{ matrix.sm_version }}-${{ matrix.os_short }}-${{ env.GITHUB_SHA_SHORT }}
          path: extension/build/package